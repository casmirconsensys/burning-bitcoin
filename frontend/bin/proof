#!/usr/bin/env node

/*!
 * bin/proof - bitcoin SES proofs
 * Copyright (c) 2019, Mark Tyneway (Apache-2.0 License).
 * https://github.com/summa-tx/agoric-bitcoin-spv
 * */

'use strict';

const BcoinClient = require('../utils/BcoinClient');
const {utils} = require('@summa-tx/bitcoin-spv-js');
const Config = require('bcfg');

const ports = {
  main: 8332,
  testnet: 18332,
  regtest: 48332,
  simnet: 18556
};

/**
 * Fetch proofs to create an SPVProof.
 **/

(async () => {
  const config = new Config('spv-proof', {
    alias: {
      t: 'txid',
      a: 'address',
      n: 'network',
      u: 'url',
      uri: 'url',
      k: 'api-key',
      s: 'ssl',
      h: 'httphost',
      p: 'httpport'
    }
  });

  config.load({
    argv: true,
    env: true
  });

  if (config.has('help')) {
    help();
    process.exit(0);
  }

  const network = config.str('network', 'main');
  const txid = config.str('txid');
  if (!txid)
    throw new Error('Must pass txid.');

  const client = new BcoinClient({
    url: config.str('url'),
    apiKey: config.str('api-key'),
    ssl: config.bool('ssl'),
    host: config.str('http-host'),
    port: config.uint('http-port')
      || ports[network]
      || ports.main
  });

  const tx = await client.getTX(txid);
  const height = await client.getHeightByTX(txid);

  if (!height)
    throw new Error('Could not fetch height.');

  const proof = await client.getProof(txid);

  console.log(JSON.stringify({
    version: proof.version,
    vin: proof.vin,
    vout: proof.vout,
    locktime: proof.locktime,
    tx_id: proof.tx_id,
    tx_id_le: proof.tx_id_le,
    index: proof.index,
    confirming_header: {
      raw: proof.confirming_header.raw,
      hash: proof.confirming_header.hash,
      hash_le: proof.confirming_header.hash_le,
      height: proof.confirming_header.height,
      prevhash: proof.confirming_header.prevhash,
      merkle_root: proof.confirming_header.merkle_root,
      merkle_root_le: proof.confirming_header.merkle_root_le
    },
    intermediate_nodes: proof.intermediate_nodes
  }, null, 2));

})().catch((error) => {
  console.log(error);
  console.log('\n');
  help();
  process.exit(1);
});

// TODO
function help() {
  const str = ''
    + 'bitcoin-verifier-ses proof builder\n'
    + '  - TODO';
 console.log(str);
}
